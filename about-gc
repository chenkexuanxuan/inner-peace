今天开启了javascript的学习进程之重要的一步。
学习了javascript内置gc（垃圾回收器）；
垃圾回收器工作原理是：若某个实例(new 出来的空间，或者类类型所对应的实例空间)没有引用它的对象(没有指针变量指向它)了，则，找机会释放这个对象所申请的空间。

function AA() {
	...;
}

AA();
上面语句组等价于：
var AA = function() {
	...;
}

AA();

事实是：AA是指针变量(在Java和javascript中被称为对象)，其值是function()函数的首地址；而function在javascript当中是一种类型，即，function() {...;}本质上是一个Function类的实例；
由于AA指向这个Function的实例，则，AA所指向的空间是不可能被gc回收的！且，从实验可知，AA成为了window对象的一个成员；
这种情况使用函数、变量、数组、Json对象等等，都会引起内存的消耗，且无法回收。

function() {
	...;
}
这叫做“匿名函数”，即，这个函数没有一个指针变量指向它，自然就不能在定义后“使用”(调用)！
但是，下面的技术可以直接执行这个匿名函数：
(function() {
	...;
})();

如果相关函数是带参数的，那么，可以用下面的方法：
(function(arg1, arg2){
	...;
})(4, "abc");

